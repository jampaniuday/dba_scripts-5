DROP TRIGGER TCG_PREPAGO_DEC_BEFORE_TRG;

DROP TRIGGER TC_PREPAGO_NUMEROS_IVR_ENTR_TG;



CREATE OR REPLACE TRIGGER TC_PREPAGO_NUMEROS_IVR_ENTR_TG

-- TELCAGT
-- MODIFICADO POR BERNARDO CRUZ - FRI 10-03-2006 18:27
-- MODIFICADO POR BERNARDO CRUZ - TUE 28-02-2006 17:41
-- MODIFICADO POR BERNARDO CRUZ - THU 27-10-2005 12:25

/* LAS LLAMADAS ENTRANTES QUE PROVIENEN DE LOS NUMEROS LISTADOS EN LA TC_NUMEROS_IVR, DEBEN SER MARCADAS COMO TIPO_LLAMADA 10,
   YA QUE SON DE HOSTIGAMIENTO, TELEMARKETING, IVR, ETC, DE TELEFONICA O EMPRESAS AFINES HACIA LOS CLIENTES DE PREPAGO,
   LAS CUALES NO DEBEN CONSIDERARSE PARA EFECTOS DE PARQUE
   BERNARDO CRUZ
*/
BEFORE INSERT
ON PREPAGO_DECIMAL REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
WHEN (
NEW.TIPO_LLAMADA IN (1,101,200) AND NEW.DESTINO_DN_B <> '0'
      )
DECLARE
V_EXISTE NUMBER(10);
BEGIN
   IF LENGTH(TRIM(:NEW.DESTINO_DN_B)) <= 8  THEN
      SELECT SUM(VALOR) INTO V_EXISTE
      FROM   (
         SELECT 1 AS VALOR FROM TC_NUMEROS_IVR
         WHERE  NUMERO =TO_NUMBER( :NEW.DESTINO_DN_B)
         UNION
         SELECT 0 AS  VALOR FROM DUAL
        );
        IF V_EXISTE = 1 THEN
         :NEW.TIPO_LLAMADA := 10;
        END IF;
   END IF;
EXCEPTION
    WHEN OTHERS THEN
      NULL;
END;
/
SHOW ERRORS;



CREATE OR REPLACE TRIGGER TCG_PREPAGO_DEC_BEFORE_TRG
BEFORE INSERT
ON PREPAGO_DECIMAL REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
WHEN (
LENGTH(NEW.ORIGEN_DN_A) > 6
      )
DECLARE
 V_VANTIVID  TCG_TUP_ESCONDIDOS.TCGTUPID%TYPE;
 CUENTA      INTEGER;
 SECUENCIA   PREPAGO_DECIMAL.PREPAGO_ID%TYPE;
BEGIN
/*  VALIDACION NUEVAMENTE DE QUE EL LARGO DEL ORIGEN_DN_A > 10  */
 SECUENCIA := 0;
 SELECT CARGA_PREPAGO.NEXTVAL INTO SECUENCIA FROM DUAL;
 :NEW.PREPAGO_ID := SECUENCIA;
 IF LENGTH(:NEW.ORIGEN_DN_A) > 10 THEN
       CUENTA := 0;
/*  BUSCO SI YA EXISTE EN LA TABLA TCG_TUP_ESCONDIDOS */
    SELECT COUNT(*) INTO CUENTA FROM TCG_TUP_ESCONDIDOS
     WHERE NUM_ESCONDIDO = :NEW.ORIGEN_DN_A;
    IF CUENTA > 0 THEN /* SI EXISTE COLOCO EL TCGTUPID EN V_VANTIVID */
       SELECT TCGTUPID INTO V_VANTIVID FROM TCG_TUP_ESCONDIDOS
       WHERE NUM_ESCONDIDO = :NEW.ORIGEN_DN_A;
    ELSE /* SI NO EXISTE ES PORQUE ES NUEVO Y LO INSERTO EN TCG_TUP_ESCONDIDOS GENERANDO UN NUEVO ID */
       SELECT TCG_TUP_SQ.NEXTVAL INTO V_VANTIVID FROM DUAL;
    INSERT INTO TCG_TUP_ESCONDIDOS VALUES (V_VANTIVID,:NEW.ORIGEN_DN_A);
    END IF;
    :NEW.ORIGEN_DN_A := TO_CHAR(V_VANTIVID);
 END IF;
-- COMMIT;
 EXCEPTION /* SI HAY ERRORES INSERTO UN MENSAJE DE ERROR EN TCG_TUP_ESCONDIDOS */
    WHEN OTHERS THEN
       IF LENGTH(:NEW.ORIGEN_DN_A) > 10 THEN
         INSERT INTO TCG_TUP_ESCONDIDOS VALUES (TCG_TUP_SQ.NEXTVAL,'ER'||:NEW.ORIGEN_DN_A);
      END IF;
--      COMMIT;
END;
/
SHOW ERRORS;

ALTER TRIGGER TCG_PREPAGO_DEC_BEFORE_TRG DISABLE;
